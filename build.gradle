buildscript {
    ext {
        lombokVersion = "1.18.12"
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'jacoco'
}

group = "org.rkm.ktdp"
version = '1.0'
sourceCompatibility = 1.8
description = "Application to produce messages to kafka topic based on template configuration and template file"

repositories {
    mavenLocal()
    mavenCentral()
}
/**********************************************************************************************************************\
 * Dependencies
 **********************************************************************************************************************/
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'

    annotationProcessor "org.projectlombok:lombok:" + lombokVersion
    compileOnly 'org.projectlombok:lombok:' + lombokVersion

    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: "org.springframework.kafka", name: "spring-kafka", version: "2.4.2.RELEASE"
    compile group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310"
    compile group: "com.github.curious-odd-man", name: "rgxgen", version: "1.4"

    implementation group: 'joda-time', name: 'joda-time', version: '2.11.0'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testAnnotationProcessor "org.projectlombok:lombok:" + lombokVersion
    testCompileOnly 'org.projectlombok:lombok:' + lombokVersion

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.6.1'
    testCompile "org.mockito:mockito-junit-jupiter:3.3.3"
}

/**********************************************************************************************************************\
 * Test
 **********************************************************************************************************************/
test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.5"
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
